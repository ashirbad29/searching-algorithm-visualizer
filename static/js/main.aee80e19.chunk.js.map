{"version":3,"sources":["visualizer/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Visualizer","useState","mainArr","setMainArr","length","setLength","algo","setAlgo","searchValue","setSearchValue","resultmsg","setResultmsg","primaryColor","useEffect","getNewArray","getNewSortedArray","randomNumberFromRange","low","high","Math","floor","random","arr","i","push","document","getElementsByClassName","style","backgroundColor","sort","a","b","temp","map","item","idx","val","displayResult","binaryHelper","animations","bars","k","setTimeout","mid","console","log","parseInt","tempLen","m","j","startSearch","setPrimaryColor","value","found","linearSearch","lo","hi","binarySearch","arrayBars","getElementById","classList","remove","add","className","id","height","placeholder","type","onChange","e","target","min","max","onClick","htmlFor","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aee80e19.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Visualizer = () => {\r\n\tconst [mainArr, setMainArr] = useState([]);\r\n\tconst [length, setLength] = useState(30);\r\n\tconst [algo, setAlgo] = useState('linearSearch');\r\n\tconst [searchValue, setSearchValue] = useState(250);\r\n\tconst [resultmsg, setResultmsg] = useState('');\r\n\r\n\tconst primaryColor = '#074478';\r\n\r\n\tuseEffect(() => {\r\n\t\talgo === 'linearSearch' ? getNewArray(length) : getNewSortedArray(length);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [length, algo]);\r\n\r\n\tconst randomNumberFromRange = (low, high) => {\r\n\t\treturn Math.floor(Math.random() * (high - low) + low);\r\n\t};\r\n\r\n\t// for binary search\r\n\tconst getNewSortedArray = length => {\r\n\t\tconst arr = [];\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tarr.push(randomNumberFromRange(100, 400));\r\n\t\t\tif (document.getElementsByClassName('array-bar')[i] != null) {\r\n\t\t\t\tdocument.getElementsByClassName('array-bar')[\r\n\t\t\t\t\ti\r\n\t\t\t\t].style.backgroundColor = primaryColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tarr.sort((a, b) => a - b);\r\n\t\tconst temp = arr.map((item, idx) => ({ idx: idx, val: item }));\r\n\t\tsetMainArr(temp);\r\n\t\tdisplayResult('no-result');\r\n\t};\r\n\r\n\tconst getNewArray = length => {\r\n\t\tconst arr = [];\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tconst item = {\r\n\t\t\t\tidx: i,\r\n\t\t\t\tval: randomNumberFromRange(100, 400),\r\n\t\t\t};\r\n\t\t\tarr.push(item);\r\n\t\t\tif (document.getElementsByClassName('array-bar')[i] != null) {\r\n\t\t\t\tdocument.getElementsByClassName('array-bar')[\r\n\t\t\t\t\ti\r\n\t\t\t\t].style.backgroundColor = primaryColor;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetMainArr(arr);\r\n\t\tdisplayResult('no-result');\r\n\t};\r\n\r\n\tconst linearSearch = value => {\r\n\t\tlet found = false;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tif (mainArr[i].val === value) {\r\n\t\t\t\tconsole.log('found');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.getElementsByClassName('array-bar')[\r\n\t\t\t\t\t\ti\r\n\t\t\t\t\t].style.backgroundColor = '#107834';\r\n\t\t\t\t\tdisplayResult(i);\r\n\t\t\t\t}, i * 100);\r\n\r\n\t\t\t\tfound = true;\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.getElementsByClassName('array-bar')[\r\n\t\t\t\t\t\ti\r\n\t\t\t\t\t].style.backgroundColor = 'cyan';\r\n\t\t\t\t}, i * 100);\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.getElementsByClassName('array-bar')[\r\n\t\t\t\t\t\ti\r\n\t\t\t\t\t].style.backgroundColor = primaryColor;\r\n\t\t\t\t}, (i + 5) * 100);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (found === false) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdisplayResult(-1);\r\n\t\t\t}, length * 100);\r\n\t\t}\r\n\t};\r\n\r\n\tconst binarySearch = value => {\r\n\t\tlet lo = 0;\r\n\t\tlet hi = length - 1;\r\n\t\tlet animations = [];\r\n\t\tlet found = false;\r\n\r\n\t\twhile (lo <= hi) {\r\n\t\t\tlet mid = Math.floor((lo + hi) / 2);\r\n\r\n\t\t\tanimations.push({\r\n\t\t\t\ti: lo,\r\n\t\t\t\tj: hi,\r\n\t\t\t\tmid: mid,\r\n\t\t\t});\r\n\r\n\t\t\tif (mainArr[mid].val === value) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (mainArr[mid].val > value) {\r\n\t\t\t\thi = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\tlo = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!found) {\r\n\t\t\tanimations.push({\r\n\t\t\t\ti: -1,\r\n\t\t\t\tj: -1,\r\n\t\t\t\tmid: -1,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tbinaryHelper(animations, value);\r\n\t};\r\n\r\n\tconst binaryHelper = (animations, searchValue) => {\r\n\t\tlet bars = document.getElementsByClassName('array-bar');\r\n\r\n\t\tfor (let k = 0; k < animations.length; k++) {\r\n\t\t\tif (animations[k].i === -1) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdisplayResult(-1);\r\n\r\n\t\t\t\t\tbars[animations[k - 1].mid].style.backgroundColor = 'grey';\r\n\t\t\t\t}, k * 1000);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (mainArr[animations[k].mid].val === searchValue) {\r\n\t\t\t\tconsole.log('inside');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbars[animations[k].mid].style.backgroundColor = 'green';\r\n\r\n\t\t\t\t\tdisplayResult(parseInt(animations[k].mid));\r\n\t\t\t\t}, (k + 1) * 1000);\r\n\t\t\t}\r\n\t\t\tlet tempLen = length;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tfor (let m = 0; m < tempLen; m++) {\r\n\t\t\t\t\tif (m <= animations[k].j && m >= animations[k].i)\r\n\t\t\t\t\t\tbars[m].style.backgroundColor = primaryColor;\r\n\t\t\t\t\telse bars[m].style.backgroundColor = 'grey';\r\n\r\n\t\t\t\t\tif (m === animations[k].mid) bars[m].style.backgroundColor = 'cyan';\r\n\t\t\t\t}\r\n\t\t\t}, k * 1000);\r\n\t\t}\r\n\t};\r\n\r\n\tconst startSearch = algo => {\r\n\t\tsetPrimaryColor();\r\n\r\n\t\talgo === 'linearSearch'\r\n\t\t\t? linearSearch(parseInt(searchValue))\r\n\t\t\t: binarySearch(parseInt(searchValue));\r\n\t};\r\n\r\n\tconst setPrimaryColor = () => {\r\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n\t\tfor (let i = 0; i < arrayBars.length; i++) {\r\n\t\t\tarrayBars[i].style.backgroundColor = primaryColor;\r\n\t\t}\r\n\t};\r\n\r\n\tconst displayResult = idx => {\r\n\t\tif (idx === 'no-result') {\r\n\t\t\tsetResultmsg('');\r\n\t\t\tdocument.getElementById('result-box').classList.remove('red', 'green');\r\n\t\t} else if (idx === -1) {\r\n\t\t\tsetResultmsg(`not found !!!`);\r\n\t\t\tdocument.getElementById('result-box').classList.remove('red', 'green');\r\n\t\t\tdocument.getElementById('result-box').classList.add('red');\r\n\t\t} else {\r\n\t\t\tsetResultmsg(`found at idx ${idx}`);\r\n\t\t\tdocument.getElementById('result-box').classList.remove('red', 'green');\r\n\t\t\tdocument.getElementById('result-box').classList.add('green');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='searching-container'>\r\n\t\t\t<div className='array-container'>\r\n\t\t\t\t<div id='result-box' className='result-box'>\r\n\t\t\t\t\t{resultmsg}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{mainArr.map(item => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='array-bar'\r\n\t\t\t\t\t\t\tkey={item.idx}\r\n\t\t\t\t\t\t\tstyle={{ height: item.val, backgroundColor: primaryColor }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<p>{item.val}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className='utility-container'>\r\n\t\t\t\t<label>Search Element</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder='try '\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tonChange={e => setSearchValue(e.target.value)}\r\n\t\t\t\t></input>\r\n\r\n\t\t\t\t<div style={{ height: '10px' }}></div>\r\n\r\n\t\t\t\t<label>Length of Array</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='input-range'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tvalue={length}\r\n\t\t\t\t\tonChange={e => setLength(e.target.value)}\r\n\t\t\t\t\tmin='15'\r\n\t\t\t\t\tmax='34'\r\n\t\t\t\t></input>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\talgo === 'linearSearch'\r\n\t\t\t\t\t\t\t? getNewArray(length)\r\n\t\t\t\t\t\t\t: getNewSortedArray(length)\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tReset Array\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<label htmlFor='algoritm'>select algorithm</label>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={algo}\r\n\t\t\t\t\tname='algoritm'\r\n\t\t\t\t\tonChange={e => setAlgo(e.target.value)}\r\n\t\t\t\t\tclassName='select'\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value='bianrySearch'>Bianry Search</option>\r\n\t\t\t\t\t<option value='linearSearch'>Linear Search</option>\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<button className='btn' onClick={() => startSearch(algo)}>\r\n\t\t\t\t\tsearch\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Visualizer;\r\n","import './App.css';\nimport Visualizer from './visualizer/Visualizer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Visualizer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}